State 0:
prog' -> . prog [ # ]
-- On VAR shift to state 1
-- On PRINT shift to state 36
-- On IF shift to state 41
-- On IDENT shift to state 45
-- On stmts shift to state 57
-- On stmt shift to state 55
-- On prog shift to state 59

State 1:
stmt -> VAR . IDENT COL types EQ expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On IDENT shift to state 2

State 2:
stmt -> VAR IDENT . COL types EQ expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On COL shift to state 3

State 3:
stmt -> VAR IDENT COL . types EQ expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On INT shift to state 4
-- On BOOL shift to state 5
-- On types shift to state 6

State 4:
types -> INT . [ EQ ]
-- On EQ reduce production types -> INT 

State 5:
types -> BOOL . [ EQ ]
-- On EQ reduce production types -> BOOL 

State 6:
stmt -> VAR IDENT COL types . EQ expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On EQ shift to state 7

State 7:
stmt -> VAR IDENT COL types EQ . expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 34

State 8:
expr -> NOT . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 33

State 9:
expr -> LET . IDENT COL types EQ expr IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On IDENT shift to state 10

State 10:
expr -> LET IDENT . COL types EQ expr IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On COL shift to state 11

State 11:
expr -> LET IDENT COL . types EQ expr IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On INT shift to state 4
-- On BOOL shift to state 5
-- On types shift to state 12

State 12:
expr -> LET IDENT COL types . EQ expr IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On EQ shift to state 13

State 13:
expr -> LET IDENT COL types EQ . expr IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 16

State 14:
expr -> IDENT . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On THEN reduce production expr -> IDENT 
-- On SCOL reduce production expr -> IDENT 
-- On RP reduce production expr -> IDENT 
-- On PLUS reduce production expr -> IDENT 
-- On OR reduce production expr -> IDENT 
-- On MUL reduce production expr -> IDENT 
-- On MINUS reduce production expr -> IDENT 
-- On IN reduce production expr -> IDENT 
-- On DIV reduce production expr -> IDENT 
-- On CMP reduce production expr -> IDENT 
-- On AND reduce production expr -> IDENT 

State 15:
expr -> CONST . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On THEN reduce production expr -> CONST 
-- On SCOL reduce production expr -> CONST 
-- On RP reduce production expr -> CONST 
-- On PLUS reduce production expr -> CONST 
-- On OR reduce production expr -> CONST 
-- On MUL reduce production expr -> CONST 
-- On MINUS reduce production expr -> CONST 
-- On IN reduce production expr -> CONST 
-- On DIV reduce production expr -> CONST 
-- On CMP reduce production expr -> CONST 
-- On AND reduce production expr -> CONST 

State 16:
expr -> expr . PLUS expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> LET IDENT COL types EQ expr . IN expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On IN shift to state 29
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On AND shift to state 31

State 17:
expr -> expr PLUS . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 18

State 18:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr PLUS expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On THEN reduce production expr -> expr PLUS expr 
-- On SCOL reduce production expr -> expr PLUS expr 
-- On RP reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On IN reduce production expr -> expr PLUS expr 
-- On CMP reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 19:
expr -> expr MUL . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 20

State 20:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr MUL expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On THEN reduce production expr -> expr MUL expr 
-- On SCOL reduce production expr -> expr MUL expr 
-- On RP reduce production expr -> expr MUL expr 
-- On PLUS reduce production expr -> expr MUL expr 
-- On OR reduce production expr -> expr MUL expr 
-- On MUL reduce production expr -> expr MUL expr 
-- On MINUS reduce production expr -> expr MUL expr 
-- On IN reduce production expr -> expr MUL expr 
-- On DIV reduce production expr -> expr MUL expr 
-- On CMP reduce production expr -> expr MUL expr 
-- On AND reduce production expr -> expr MUL expr 

State 21:
expr -> expr MINUS . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 22

State 22:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr MINUS expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On MUL shift to state 19
-- On DIV shift to state 23
-- On THEN reduce production expr -> expr MINUS expr 
-- On SCOL reduce production expr -> expr MINUS expr 
-- On RP reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On IN reduce production expr -> expr MINUS expr 
-- On CMP reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 23:
expr -> expr DIV . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 24

State 24:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr DIV expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On MUL shift to state 19
-- On THEN reduce production expr -> expr DIV expr 
-- On SCOL reduce production expr -> expr DIV expr 
-- On RP reduce production expr -> expr DIV expr 
-- On PLUS reduce production expr -> expr DIV expr 
-- On OR reduce production expr -> expr DIV expr 
-- On MINUS reduce production expr -> expr DIV expr 
-- On IN reduce production expr -> expr DIV expr 
-- On DIV reduce production expr -> expr DIV expr 
-- On CMP reduce production expr -> expr DIV expr 
-- On AND reduce production expr -> expr DIV expr 

State 25:
expr -> expr OR . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 26

State 26:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr OR expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On THEN reduce production expr -> expr OR expr 
-- On SCOL reduce production expr -> expr OR expr 
-- On RP reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On IN reduce production expr -> expr OR expr 
-- On AND reduce production expr -> expr OR expr 

State 27:
expr -> expr CMP . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 28

State 28:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr CMP expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On THEN reduce production expr -> expr CMP expr 
-- On SCOL reduce production expr -> expr CMP expr 
-- On RP reduce production expr -> expr CMP expr 
-- On OR reduce production expr -> expr CMP expr 
-- On IN reduce production expr -> expr CMP expr 
-- On AND reduce production expr -> expr CMP expr 

State 29:
expr -> LET IDENT COL types EQ expr IN . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 30

State 30:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> LET IDENT COL types EQ expr IN expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On THEN reduce production expr -> LET IDENT COL types EQ expr IN expr 
-- On SCOL reduce production expr -> LET IDENT COL types EQ expr IN expr 
-- On RP reduce production expr -> LET IDENT COL types EQ expr IN expr 
-- On OR reduce production expr -> LET IDENT COL types EQ expr IN expr 
-- On IN reduce production expr -> LET IDENT COL types EQ expr IN expr 
-- On AND reduce production expr -> LET IDENT COL types EQ expr IN expr 

State 31:
expr -> expr AND . expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 32

State 32:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr AND expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On THEN reduce production expr -> expr AND expr 
-- On SCOL reduce production expr -> expr AND expr 
-- On RP reduce production expr -> expr AND expr 
-- On IN reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 33:
expr -> expr . PLUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MINUS expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . DIV expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . MUL expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . CMP expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . AND expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> expr . OR expr [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
expr -> NOT expr . [ THEN SCOL RP PLUS OR MUL MINUS IN DIV CMP AND ]
-- On PLUS shift to state 17
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On THEN reduce production expr -> NOT expr 
-- On SCOL reduce production expr -> NOT expr 
-- On RP reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On IN reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 34:
expr -> expr . PLUS expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MINUS expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . DIV expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MUL expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . CMP expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . AND expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . OR expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
stmt -> VAR IDENT COL types EQ expr . SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On SCOL shift to state 35
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On AND shift to state 31

State 35:
stmt -> VAR IDENT COL types EQ expr SCOL . [ VAR RB PRINT IF IDENT EOF ]
-- On VAR reduce production stmt -> VAR IDENT COL types EQ expr SCOL 
-- On RB reduce production stmt -> VAR IDENT COL types EQ expr SCOL 
-- On PRINT reduce production stmt -> VAR IDENT COL types EQ expr SCOL 
-- On IF reduce production stmt -> VAR IDENT COL types EQ expr SCOL 
-- On IDENT reduce production stmt -> VAR IDENT COL types EQ expr SCOL 
-- On EOF reduce production stmt -> VAR IDENT COL types EQ expr SCOL 

State 36:
stmt -> PRINT . LP expr RP SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On LP shift to state 37

State 37:
stmt -> PRINT LP . expr RP SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 38

State 38:
expr -> expr . PLUS expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MINUS expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . DIV expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MUL expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . CMP expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . AND expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . OR expr [ RP PLUS OR MUL MINUS DIV CMP AND ]
stmt -> PRINT LP expr . RP SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On RP shift to state 39
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On AND shift to state 31

State 39:
stmt -> PRINT LP expr RP . SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On SCOL shift to state 40

State 40:
stmt -> PRINT LP expr RP SCOL . [ VAR RB PRINT IF IDENT EOF ]
-- On VAR reduce production stmt -> PRINT LP expr RP SCOL 
-- On RB reduce production stmt -> PRINT LP expr RP SCOL 
-- On PRINT reduce production stmt -> PRINT LP expr RP SCOL 
-- On IF reduce production stmt -> PRINT LP expr RP SCOL 
-- On IDENT reduce production stmt -> PRINT LP expr RP SCOL 
-- On EOF reduce production stmt -> PRINT LP expr RP SCOL 

State 41:
stmt -> IF . expr THEN LB stmts RB ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 42

State 42:
expr -> expr . PLUS expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MINUS expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . DIV expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MUL expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . CMP expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . AND expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . OR expr [ THEN PLUS OR MUL MINUS DIV CMP AND ]
stmt -> IF expr . THEN LB stmts RB ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On THEN shift to state 43
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On AND shift to state 31

State 43:
stmt -> IF expr THEN . LB stmts RB ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On LB shift to state 44

State 44:
stmt -> IF expr THEN LB . stmts RB ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On VAR shift to state 1
-- On PRINT shift to state 36
-- On IF shift to state 41
-- On IDENT shift to state 45
-- On stmts shift to state 49
-- On stmt shift to state 55

State 45:
stmt -> IDENT . SET expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On SET shift to state 46

State 46:
stmt -> IDENT SET . expr SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On NOT shift to state 8
-- On LET shift to state 9
-- On IDENT shift to state 14
-- On CONST shift to state 15
-- On expr shift to state 47

State 47:
expr -> expr . PLUS expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MINUS expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . DIV expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . MUL expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . CMP expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . AND expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
expr -> expr . OR expr [ SCOL PLUS OR MUL MINUS DIV CMP AND ]
stmt -> IDENT SET expr . SCOL [ VAR RB PRINT IF IDENT EOF ]
-- On SCOL shift to state 48
-- On PLUS shift to state 17
-- On OR shift to state 25
-- On MUL shift to state 19
-- On MINUS shift to state 21
-- On DIV shift to state 23
-- On CMP shift to state 27
-- On AND shift to state 31

State 48:
stmt -> IDENT SET expr SCOL . [ VAR RB PRINT IF IDENT EOF ]
-- On VAR reduce production stmt -> IDENT SET expr SCOL 
-- On RB reduce production stmt -> IDENT SET expr SCOL 
-- On PRINT reduce production stmt -> IDENT SET expr SCOL 
-- On IF reduce production stmt -> IDENT SET expr SCOL 
-- On IDENT reduce production stmt -> IDENT SET expr SCOL 
-- On EOF reduce production stmt -> IDENT SET expr SCOL 

State 49:
stmt -> IF expr THEN LB stmts . RB ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On RB shift to state 50

State 50:
stmt -> IF expr THEN LB stmts RB . ELSE LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On ELSE shift to state 51

State 51:
stmt -> IF expr THEN LB stmts RB ELSE . LB stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On LB shift to state 52

State 52:
stmt -> IF expr THEN LB stmts RB ELSE LB . stmts RB [ VAR RB PRINT IF IDENT EOF ]
-- On VAR shift to state 1
-- On PRINT shift to state 36
-- On IF shift to state 41
-- On IDENT shift to state 45
-- On stmts shift to state 53
-- On stmt shift to state 55

State 53:
stmt -> IF expr THEN LB stmts RB ELSE LB stmts . RB [ VAR RB PRINT IF IDENT EOF ]
-- On RB shift to state 54

State 54:
stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB . [ VAR RB PRINT IF IDENT EOF ]
-- On VAR reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 
-- On RB reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 
-- On PRINT reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 
-- On IF reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 
-- On IDENT reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 
-- On EOF reduce production stmt -> IF expr THEN LB stmts RB ELSE LB stmts RB 

State 55:
stmts -> stmt . [ RB EOF ]
stmts -> stmt . stmts [ RB EOF ]
-- On VAR shift to state 1
-- On PRINT shift to state 36
-- On IF shift to state 41
-- On IDENT shift to state 45
-- On stmts shift to state 56
-- On stmt shift to state 55
-- On RB reduce production stmts -> stmt 
-- On EOF reduce production stmts -> stmt 

State 56:
stmts -> stmt stmts . [ RB EOF ]
-- On RB reduce production stmts -> stmt stmts 
-- On EOF reduce production stmts -> stmt stmts 

State 57:
prog -> stmts . EOF [ # ]
-- On EOF shift to state 58

State 58:
prog -> stmts EOF . [ # ]
-- On # reduce production prog -> stmts EOF 

State 59:
prog' -> prog . [ # ]
-- On # accept prog

